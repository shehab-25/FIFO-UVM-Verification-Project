Coverage Report by instance with details

=================================================================================
=== Instance: /FIFO_top/FIFO_if
=== Design Unit: work.FIFO_interface
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        132       132         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/FIFO_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                   almostempty_ref           1           1      100.00 
                                        almostfull           1           1      100.00 
                                    almostfull_ref           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                data_out_ref[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                         empty_ref           1           1      100.00 
                                              full           1           1      100.00 
                                          full_ref           1           1      100.00 
                                          overflow           1           1      100.00 
                                      overflow_ref           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                     underflow_ref           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                        wr_ack_ref           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         66 
Toggled Node Count   =         66 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (132 of 132 bins)

=================================================================================
=== Instance: /FIFO_top/FIFO_DUT/FIFO_SVA_INST
=== Design Unit: work.FIFO_SVA
=================================================================================

Assertion Coverage:
    Assertions                      22        22         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/reset_ass
                     FIFO_SVA.sv(10)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_ass
                     FIFO_SVA.sv(13)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_ass
                     FIFO_SVA.sv(14)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_ass
                     FIFO_SVA.sv(15)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almost_empty_ass
                     FIFO_SVA.sv(16)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_inactive_assert
                     FIFO_SVA.sv(101)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_after_almostfull_assert
                     FIFO_SVA.sv(102)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_from_full_assert
                     FIFO_SVA.sv(103)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_inactive_assert
                     FIFO_SVA.sv(104)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_inactive_assert
                     FIFO_SVA.sv(105)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_from_almostempty_assert
                     FIFO_SVA.sv(106)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_inactive_assert
                     FIFO_SVA.sv(107)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_from_empty_assert
                     FIFO_SVA.sv(108)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/overflow_assert
                     FIFO_SVA.sv(109)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/underflow_assert
                     FIFO_SVA.sv(110)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_assert
                     FIFO_SVA.sv(111)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_inactive_assert
                     FIFO_SVA.sv(112)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ptr_assert
                     FIFO_SVA.sv(113)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/rd_ptr_assert
                     FIFO_SVA.sv(114)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_inc_assert
                     FIFO_SVA.sv(115)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_dec_assert
                     FIFO_SVA.sv(116)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_const_assert
                     FIFO_SVA.sv(117)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         6         4    60.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/FIFO_DUT/FIFO_SVA_INST

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
------------------------------------IF Branch------------------------------------
    9                                       1249     Count coming in to IF
    9               1                        195     		if(!FIFO_if.rst_n) begin
                                            1054     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    13                                      1247     Count coming in to IF
    13              1                       1247     		full_ass:         assert final(FIFO_if.full == (FIFO_DUT.count == FIFO_DEPTH)? 1 : 0)         else $display("at time: %t , full fails",$time);
    13              2                    ***0***     		full_ass:         assert final(FIFO_if.full == (FIFO_DUT.count == FIFO_DEPTH)? 1 : 0)         else $display("at time: %t , full fails",$time);
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    14                                      1247     Count coming in to IF
    14              1                       1247     		empty_ass:        assert final(FIFO_if.empty == (FIFO_DUT.count == 0)? 1 : 0)                 else $display("at time: %t , empty fails",$time);
    14              2                    ***0***     		empty_ass:        assert final(FIFO_if.empty == (FIFO_DUT.count == 0)? 1 : 0)                 else $display("at time: %t , empty fails",$time);
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    15                                      1247     Count coming in to IF
    15              1                       1247     		almostfull_ass:   assert final(FIFO_if.almostfull == (FIFO_DUT.count == FIFO_DEPTH-1)? 1 : 0) else $display("at time: %t , almost full fails",$time);
    15              2                    ***0***     		almostfull_ass:   assert final(FIFO_if.almostfull == (FIFO_DUT.count == FIFO_DEPTH-1)? 1 : 0) else $display("at time: %t , almost full fails",$time);
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    16                                      1247     Count coming in to IF
    16              1                       1247     		almost_empty_ass: assert final(FIFO_if.almostempty == (FIFO_DUT.count == 1)? 1 : 0 )          else $display("at time: %t , almost empty fails",$time);
    16              2                    ***0***     		almost_empty_ass: assert final(FIFO_if.almostempty == (FIFO_DUT.count == 1)? 1 : 0 )          else $display("at time: %t , almost empty fails",$time);
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/FIFO_DUT/FIFO_SVA_INST --

  File FIFO_SVA.sv
----------------Focused Condition View-------------------
Line       13 Item    1  (FIFO_if.full == (FIFO_DUT.count == 8))
Condition totals: 0 of 1 input term covered = 0.00%

                               Input Term   Covered  Reason for no coverage   Hint
                              -----------  --------  -----------------------  --------------
  (FIFO_if.full == (FIFO_DUT.count == 8))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                 Non-masking condition(s)      
 ---------  ---------  --------------------                       -------------------------     
  Row   1:    ***0***  (FIFO_if.full == (FIFO_DUT.count == 8))_0  -                             
  Row   2:          1  (FIFO_if.full == (FIFO_DUT.count == 8))_1  -                             

----------------Focused Condition View-------------------
Line       14 Item    1  (FIFO_if.empty == (FIFO_DUT.count == 0))
Condition totals: 0 of 1 input term covered = 0.00%

                                Input Term   Covered  Reason for no coverage   Hint
                               -----------  --------  -----------------------  --------------
  (FIFO_if.empty == (FIFO_DUT.count == 0))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                  Non-masking condition(s)      
 ---------  ---------  --------------------                        -------------------------     
  Row   1:    ***0***  (FIFO_if.empty == (FIFO_DUT.count == 0))_0  -                             
  Row   2:          1  (FIFO_if.empty == (FIFO_DUT.count == 0))_1  -                             

----------------Focused Condition View-------------------
Line       15 Item    1  (FIFO_if.almostfull == (FIFO_DUT.count == (8 - 1)))
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (FIFO_if.almostfull == (FIFO_DUT.count == (8 - 1)))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:    ***0***  (FIFO_if.almostfull == (FIFO_DUT.count == (8 - 1)))_0  -                             
  Row   2:          1  (FIFO_if.almostfull == (FIFO_DUT.count == (8 - 1)))_1  -                             

----------------Focused Condition View-------------------
Line       16 Item    1  (FIFO_if.almostempty == (FIFO_DUT.count == 1))
Condition totals: 0 of 1 input term covered = 0.00%

                                      Input Term   Covered  Reason for no coverage   Hint
                                     -----------  --------  -----------------------  --------------
  (FIFO_if.almostempty == (FIFO_DUT.count == 1))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                        Non-masking condition(s)      
 ---------  ---------  --------------------                              -------------------------     
  Row   1:    ***0***  (FIFO_if.almostempty == (FIFO_DUT.count == 1))_0  -                             
  Row   2:          1  (FIFO_if.almostempty == (FIFO_DUT.count == 1))_1  -                             



Directive Coverage:
    Directives                      17        17         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(120)   5 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_after_almostfull_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(121)  33 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_from_full_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(122)   5 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(123)   9 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(124) 129 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_from_almostempty_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(125)  62 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(126) 101 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_from_empty_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(127)  89 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/overflow_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(128) 674 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/underflow_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(129) 991 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(130) 705 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(131)2054 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(132) 705 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/rd_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(133) 388 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_inc_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(134) 471 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_dec_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(135) 192 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_const_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(136) 194 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/FIFO_DUT/FIFO_SVA_INST --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
    3                                                module FIFO_SVA (FIFO_interface.DUT FIFO_if);
    4                                                    
    5                                                	`ifdef FIFO_Assertions
    6                                                
    7                                                	//immediate assertions (combinational outputs)
    8               1                       1249     	always_comb begin


=================================================================================
=== Instance: /FIFO_top/FIFO_DUT
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        26        26         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/FIFO_DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    21                                      3121     Count coming in to IF
    21              1                        242     		if (!FIFO_if.rst_n) begin
    26              1                        736     		else if (FIFO_if.wr_en && count < FIFO_DEPTH) begin
    32              1                       2143     		else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    34                                      2143     Count coming in to IF
    34              1                        702     			if (FIFO_if.full && FIFO_if.wr_en)
    36              1                       1441     			else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                      3121     Count coming in to IF
    43              1                        242     		if (!FIFO_if.rst_n) begin
    48              1                        398     		else if (FIFO_if.rd_en && count != 0) begin
    54              1                       2481     		else begin   //fix : underflow output is sequential output not combinational
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                      2481     Count coming in to IF
    55              1                       1040     			if (FIFO_if.rd_en && FIFO_if.empty) begin
    58              1                       1441     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      1423     Count coming in to IF
    65              1                        240     		if (!FIFO_if.rst_n) begin
    68              1                       1183     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                      1183     Count coming in to IF
    69              1                          2     			if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && FIFO_if.full) begin 
    72              1                         42     			else if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && FIFO_if.empty) begin  //fix
    75              1                        148     			else if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && !FIFO_if.full && !FIFO_if.empty) begin  //fix
    78              1                        493     			else if ( ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b10) && !FIFO_if.full) 
    80              1                        195     			else if ( ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b01) && !FIFO_if.empty)
                                             303     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                       803     Count coming in to IF
    85              1                         35     	assign FIFO_if.full = (count == FIFO_DEPTH)? 1 : 0;
    85              2                        768     	assign FIFO_if.full = (count == FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                       803     Count coming in to IF
    86              1                        134     	assign FIFO_if.empty = (count == 0)? 1 : 0;
    86              2                        669     	assign FIFO_if.empty = (count == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                       803     Count coming in to IF
    87              1                         45     	assign FIFO_if.almostfull = (count == FIFO_DEPTH-1)? 1 : 0; //fix : almostfull signal is high when count=FIFO_DEPTH-1 not FIFO_DEPTH-2
    87              2                        758     	assign FIFO_if.almostfull = (count == FIFO_DEPTH-1)? 1 : 0; //fix : almostfull signal is high when count=FIFO_DEPTH-1 not FIFO_DEPTH-2
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                       803     Count coming in to IF
    88              1                        183     	assign FIFO_if.almostempty = (count == 1)? 1 : 0;
    88              2                        620     	assign FIFO_if.almostempty = (count == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      28        24         4    85.71%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/FIFO_DUT --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       26 Item    1  (FIFO_if.wr_en && (count < 8))
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.wr_en         Y
    (count < 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.wr_en_0       -                             
  Row   2:          1  FIFO_if.wr_en_1       (count < 8)                   
  Row   3:          1  (count < 8)_0         FIFO_if.wr_en                 
  Row   4:          1  (count < 8)_1         FIFO_if.wr_en                 

----------------Focused Condition View-------------------
Line       34 Item    1  (FIFO_if.full && FIFO_if.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   FIFO_if.full         Y
  FIFO_if.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.full_0        -                             
  Row   2:          1  FIFO_if.full_1        FIFO_if.wr_en                 
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.full                  
  Row   4:          1  FIFO_if.wr_en_1       FIFO_if.full                  

----------------Focused Condition View-------------------
Line       48 Item    1  (FIFO_if.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
   (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (count != 0)                  
  Row   3:          1  (count != 0)_0        FIFO_if.rd_en                 
  Row   4:          1  (count != 0)_1        FIFO_if.rd_en                 

----------------Focused Condition View-------------------
Line       55 Item    1  (FIFO_if.rd_en && FIFO_if.empty)
Condition totals: 1 of 2 input terms covered = 50.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.empty         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       FIFO_if.empty                 
  Row   3:    ***0***  FIFO_if.empty_0       FIFO_if.rd_en                 
  Row   4:          1  FIFO_if.empty_1       FIFO_if.rd_en                 

----------------Focused Condition View-------------------
Line       69 Item    1  ((FIFO_if.rd_en && FIFO_if.wr_en) && FIFO_if.full)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.wr_en         Y
   FIFO_if.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (FIFO_if.full && FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.rd_en                 
  Row   4:          1  FIFO_if.wr_en_1       (FIFO_if.full && FIFO_if.rd_en)
  Row   5:          1  FIFO_if.full_0        (FIFO_if.rd_en && FIFO_if.wr_en)
  Row   6:          1  FIFO_if.full_1        (FIFO_if.rd_en && FIFO_if.wr_en)

----------------Focused Condition View-------------------
Line       72 Item    1  ((FIFO_if.rd_en && FIFO_if.wr_en) && FIFO_if.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.wr_en         Y
  FIFO_if.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (FIFO_if.empty && FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.rd_en                 
  Row   4:          1  FIFO_if.wr_en_1       (FIFO_if.empty && FIFO_if.rd_en)
  Row   5:          1  FIFO_if.empty_0       (FIFO_if.rd_en && FIFO_if.wr_en)
  Row   6:          1  FIFO_if.empty_1       (FIFO_if.rd_en && FIFO_if.wr_en)

----------------Focused Condition View-------------------
Line       75 Item    1  (((FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full) && ~FIFO_if.empty)
Condition totals: 2 of 4 input terms covered = 50.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.wr_en         Y
   FIFO_if.full         N  '_1' not hit             Hit '_1'
  FIFO_if.empty         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (~FIFO_if.empty && ~FIFO_if.full && FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.rd_en                 
  Row   4:          1  FIFO_if.wr_en_1       (~FIFO_if.empty && ~FIFO_if.full && FIFO_if.rd_en)
  Row   5:          1  FIFO_if.full_0        (~FIFO_if.empty && (FIFO_if.rd_en && FIFO_if.wr_en))
  Row   6:    ***0***  FIFO_if.full_1        (FIFO_if.rd_en && FIFO_if.wr_en)
  Row   7:          1  FIFO_if.empty_0       ((FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full)
  Row   8:    ***0***  FIFO_if.empty_1       ((FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full)

----------------Focused Condition View-------------------
Line       78 Item    1  ((~FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.wr_en         Y
   FIFO_if.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       (~FIFO_if.full && FIFO_if.wr_en)
  Row   2:          1  FIFO_if.rd_en_1       -                             
  Row   3:          1  FIFO_if.wr_en_0       ~FIFO_if.rd_en                
  Row   4:          1  FIFO_if.wr_en_1       (~FIFO_if.full && ~FIFO_if.rd_en)
  Row   5:          1  FIFO_if.full_0        (~FIFO_if.rd_en && FIFO_if.wr_en)
  Row   6:          1  FIFO_if.full_1        (~FIFO_if.rd_en && FIFO_if.wr_en)

----------------Focused Condition View-------------------
Line       80 Item    1  ((FIFO_if.rd_en && ~FIFO_if.wr_en) && ~FIFO_if.empty)
Condition totals: 2 of 3 input terms covered = 66.66%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
  FIFO_if.wr_en         N  '_1' not hit             Hit '_1'
  FIFO_if.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (~FIFO_if.empty && ~FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       (~FIFO_if.empty && FIFO_if.rd_en)
  Row   4:    ***0***  FIFO_if.wr_en_1       FIFO_if.rd_en                 
  Row   5:          1  FIFO_if.empty_0       (FIFO_if.rd_en && ~FIFO_if.wr_en)
  Row   6:          1  FIFO_if.empty_1       (FIFO_if.rd_en && ~FIFO_if.wr_en)

----------------Focused Condition View-------------------
Line       85 Item    1  (count == 8)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 8)_0        -                             
  Row   2:          1  (count == 8)_1        -                             

----------------Focused Condition View-------------------
Line       86 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       87 Item    1  (count == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (count == (8 - 1))         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == (8 - 1))_0  -                             
  Row   2:          1  (count == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      31        31         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/FIFO_DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    10                                               module FIFO(FIFO_interface.DUT FIFO_if);
    11                                               	
    12                                               	localparam max_fifo_addr = $clog2(FIFO_DEPTH);
    13                                               
    14                                               	reg [FIFO_WIDTH-1:0] mem [FIFO_DEPTH-1:0];
    15                                               
    16                                               	reg [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    17                                               	reg [max_fifo_addr:0] count;
    18                                               
    19                                               	// write operation
    20              1                       3121     	always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    21                                               		if (!FIFO_if.rst_n) begin
    22              1                        242     			wr_ptr <= 0;
    23              1                        242     			FIFO_if.overflow <= 0;  //fix: overflow signal should be zero at reset
    24              1                        242     			FIFO_if.wr_ack <= 0;    //fix: write_ack signal should be zero at reset
    25                                               		end
    26                                               		else if (FIFO_if.wr_en && count < FIFO_DEPTH) begin
    27              1                        736     			mem[wr_ptr] <= FIFO_if.data_in;
    28              1                        736     			FIFO_if.wr_ack <= 1;
    29              1                        736     			wr_ptr <= wr_ptr + 1;
    30              1                        736     			FIFO_if.overflow <= 0;  //fix: due to FIFO is not full , so overflow should be zero
    31                                               		end
    32                                               		else begin 
    33              1                       2143     			FIFO_if.wr_ack <= 0; 
    34                                               			if (FIFO_if.full && FIFO_if.wr_en)
    35              1                        702     				FIFO_if.overflow <= 1;
    36                                               			else
    37              1                       1441     				FIFO_if.overflow <= 0;
    38                                               		end
    39                                               	end
    40                                               
    41                                               	// read operation
    42              1                       3121     	always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    43                                               		if (!FIFO_if.rst_n) begin
    44              1                        242     			rd_ptr <= 0;
    45              1                        242     			FIFO_if.underflow <= 0;   //fix: underflow signal should be zero at reset
    46              1                        242     			FIFO_if.data_out <= 0;    //fix: dataout signal should be zero at reset
    47                                               		end
    48                                               		else if (FIFO_if.rd_en && count != 0) begin
    49              1                        398     			FIFO_if.data_out <= mem[rd_ptr];
    50              1                        398     			rd_ptr <= rd_ptr + 1;
    51              1                        398     			FIFO_if.underflow <= 0;    //fix: due to FIFO is not empty , so underflow should be zero
    52                                               		end
    53                                               
    54                                               		else begin   //fix : underflow output is sequential output not combinational
    55                                               			if (FIFO_if.rd_en && FIFO_if.empty) begin
    56              1                       1040     				FIFO_if.underflow <= 1;       //fix
    57                                               			end
    58                                               			else begin
    59              1                       1441     				FIFO_if.underflow <= 0;        //fix
    60                                               			end
    61                                               		end
    62                                               	end
    63                                               
    64              1                       1423     	always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    65                                               		if (!FIFO_if.rst_n) begin
    66              1                        240     			count <= 0;
    67                                               		end
    68                                               		else begin
    69                                               			if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && FIFO_if.full) begin 
    70              1                          2                         count <= count-1;  //fix: when both wr_en and rd_en are high , and full=1 , only read operation will occur
    71                                                           end
    72                                               			else if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && FIFO_if.empty) begin  //fix
    73              1                         42                         count <= count+1; //fix: when both wr_en and rd_en are high , and empty=1 , only write operation will occur
    74                                                           end
    75                                               			else if (({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11) && !FIFO_if.full && !FIFO_if.empty) begin  //fix
    76              1                        148                         count <= count; //fix: when both wr_en and rd_en are high , and both empty=0 and full=0 , both operations (read,write) will occur
    77                                                           end
    78                                               			else if ( ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b10) && !FIFO_if.full) 
    79              1                        493     				count <= count + 1;
    80                                               			else if ( ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b01) && !FIFO_if.empty)
    81              1                        195     				count <= count - 1;
    82                                               		end
    83                                               	end
    84                                               
    85              1                        804     	assign FIFO_if.full = (count == FIFO_DEPTH)? 1 : 0;
    86              1                        804     	assign FIFO_if.empty = (count == 0)? 1 : 0;
    87              1                        804     	assign FIFO_if.almostfull = (count == FIFO_DEPTH-1)? 1 : 0; //fix : almostfull signal is high when count=FIFO_DEPTH-1 not FIFO_DEPTH-2
    88              1                        804     	assign FIFO_if.almostempty = (count == 1)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/FIFO_DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /FIFO_top/ref_model
=== Design Unit: work.FIFO_golden
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        18        18         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/ref_model

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_golden.sv
------------------------------------IF Branch------------------------------------
    8                                       3121     Count coming in to IF
    8               1                        242             if (!FIFO_if.rst_n) begin
    13              1                        736             else if (FIFO_if.wr_en && !FIFO_if.full_ref) begin
    18              1                       2143             else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    20                                      2143     Count coming in to IF
    20              1                        702                 if (FIFO_if.full_ref && FIFO_if.wr_en)
    22              1                       1441                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      3121     Count coming in to IF
    29              1                        242             if (!FIFO_if.rst_n) begin
    34              1                        398             else if (FIFO_if.rd_en && !FIFO_if.empty_ref) begin
    38              1                       2481             else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      2481     Count coming in to IF
    39              1                       1040                 if (FIFO_if.empty_ref && FIFO_if.rd_en)
    41              1                       1441                 else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    47                                      1004     Count coming in to IF
    47              1                         35         assign FIFO_if.full_ref = (fifo_queue.size() >= FIFO_DEPTH )? 1:0;
    47              2                        969         assign FIFO_if.full_ref = (fifo_queue.size() >= FIFO_DEPTH )? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                      1004     Count coming in to IF
    48              1                         52         assign FIFO_if.almostfull_ref = (fifo_queue.size() == FIFO_DEPTH-1)? 1:0;
    48              2                        952         assign FIFO_if.almostfull_ref = (fifo_queue.size() == FIFO_DEPTH-1)? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                      1004     Count coming in to IF
    49              1                        134         assign FIFO_if.empty_ref = (fifo_queue.size() == 0)? 1:0;
    49              2                        870         assign FIFO_if.empty_ref = (fifo_queue.size() == 0)? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                      1004     Count coming in to IF
    50              1                        266         assign FIFO_if.almostempty_ref = (fifo_queue.size() == 1)? 1:0;
    50              2                        738         assign FIFO_if.almostempty_ref = (fifo_queue.size() == 1)? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12        12         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/ref_model --

  File FIFO_golden.sv
----------------Focused Condition View-------------------
Line       13 Item    1  (FIFO_if.wr_en && ~FIFO_if.full_ref)
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
     FIFO_if.wr_en         Y
  FIFO_if.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.wr_en_0       -                             
  Row   2:          1  FIFO_if.wr_en_1       ~FIFO_if.full_ref             
  Row   3:          1  FIFO_if.full_ref_0    FIFO_if.wr_en                 
  Row   4:          1  FIFO_if.full_ref_1    FIFO_if.wr_en                 

----------------Focused Condition View-------------------
Line       20 Item    1  (FIFO_if.full_ref && FIFO_if.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  FIFO_if.full_ref         Y
     FIFO_if.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.full_ref_0    -                             
  Row   2:          1  FIFO_if.full_ref_1    FIFO_if.wr_en                 
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.full_ref              
  Row   4:          1  FIFO_if.wr_en_1       FIFO_if.full_ref              

----------------Focused Condition View-------------------
Line       34 Item    1  (FIFO_if.rd_en && ~FIFO_if.empty_ref)
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
      FIFO_if.rd_en         Y
  FIFO_if.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       ~FIFO_if.empty_ref            
  Row   3:          1  FIFO_if.empty_ref_0   FIFO_if.rd_en                 
  Row   4:          1  FIFO_if.empty_ref_1   FIFO_if.rd_en                 

----------------Focused Condition View-------------------
Line       39 Item    1  (FIFO_if.empty_ref && FIFO_if.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  FIFO_if.empty_ref         Y
      FIFO_if.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.empty_ref_0   -                             
  Row   2:          1  FIFO_if.empty_ref_1   FIFO_if.rd_en                 
  Row   3:          1  FIFO_if.rd_en_0       FIFO_if.empty_ref             
  Row   4:          1  FIFO_if.rd_en_1       FIFO_if.empty_ref             

----------------Focused Condition View-------------------
Line       47 Item    1  (size(fifo_queue) >= 8)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(fifo_queue) >= 8)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(fifo_queue) >= 8)_0  -                             
  Row   2:          1  (size(fifo_queue) >= 8)_1  -                             

----------------Focused Condition View-------------------
Line       48 Item    1  (size(fifo_queue) == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (size(fifo_queue) == (8 - 1))         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (size(fifo_queue) == (8 - 1))_0  -                             
  Row   2:          1  (size(fifo_queue) == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       49 Item    1  (size(fifo_queue) == 0)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(fifo_queue) == 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(fifo_queue) == 0)_0  -                             
  Row   2:          1  (size(fifo_queue) == 0)_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    1  (size(fifo_queue) == 1)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(fifo_queue) == 1)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(fifo_queue) == 1)_0  -                             
  Row   2:          1  (size(fifo_queue) == 1)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      22        22         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/ref_model --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_golden.sv
    2                                                module FIFO_golden (FIFO_interface.golden FIFO_if);
    3                                                
    4                                                    reg [FIFO_WIDTH-1:0] fifo_queue [$];
    5                                                    
    6                                                    // Write operation
    7               1                       3121         always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    8                                                        if (!FIFO_if.rst_n) begin
    9               1                        242                 fifo_queue.delete();
    10              1                        242                 FIFO_if.wr_ack_ref <= 0;
    11              1                        242                 FIFO_if.overflow_ref <= 0;
    12                                                       end
    13                                                       else if (FIFO_if.wr_en && !FIFO_if.full_ref) begin
    14              1                        736                 fifo_queue.push_back(FIFO_if.data_in);
    15              1                        736                 FIFO_if.wr_ack_ref <= 1;
    16              1                        736                 FIFO_if.overflow_ref <= 0;
    17                                                       end
    18                                                       else begin
    19              1                       2143                 FIFO_if.wr_ack_ref <= 0;
    20                                                           if (FIFO_if.full_ref && FIFO_if.wr_en)
    21              1                        702                     FIFO_if.overflow_ref <= 1;
    22                                                           else
    23              1                       1441                     FIFO_if.overflow_ref <= 0;
    24                                                       end
    25                                                   end
    26                                               
    27                                                   // Read operation
    28              1                       3121         always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    29                                                       if (!FIFO_if.rst_n) begin
    30              1                        242                 fifo_queue.delete();
    31              1                        242                 FIFO_if.underflow_ref <= 0;
    32              1                        242                 FIFO_if.data_out_ref <= 0;
    33                                                       end
    34                                                       else if (FIFO_if.rd_en && !FIFO_if.empty_ref) begin
    35              1                        398                 FIFO_if.data_out_ref <= fifo_queue.pop_front();
    36              1                        398                 FIFO_if.underflow_ref <= 0;
    37                                                       end
    38                                                       else begin
    39                                                           if (FIFO_if.empty_ref && FIFO_if.rd_en)
    40              1                       1040                     FIFO_if.underflow_ref <= 1;
    41                                                           else 
    42              1                       1441                     FIFO_if.underflow_ref <= 0;
    43                                                       end
    44                                                   end
    45                                               
    46                                                   // combinational outputs 
    47              1                       1004         assign FIFO_if.full_ref = (fifo_queue.size() >= FIFO_DEPTH )? 1:0;
    48              1                       1004         assign FIFO_if.almostfull_ref = (fifo_queue.size() == FIFO_DEPTH-1)? 1:0;
    49              1                       1004         assign FIFO_if.empty_ref = (fifo_queue.size() == 0)? 1:0;
    50              1                       1004         assign FIFO_if.almostempty_ref = (fifo_queue.size() == 1)? 1:0;


=================================================================================
=== Instance: /FIFO_top
=== Design Unit: work.FIFO_top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_top.sv
    5                                                module FIFO_top ();
    6                                                    logic clk;
    7                                                    initial begin
    8               1                          1             clk = 0;
    9               1                          1             forever begin
    10              1                       6003                 #1 clk = ~clk;
    10              2                       6002     
    11                                                       end
    12                                                   end
    13                                               
    14                                                   FIFO_interface FIFO_if(clk);
    15                                                   FIFO FIFO_DUT(FIFO_if);
    16                                                   FIFO_golden ref_model(FIFO_if);
    17                                                   bind FIFO FIFO_SVA FIFO_SVA_INST(FIFO_if);
    18                                               
    19                                                   initial begin
    20              1                          1             uvm_config_db #(virtual FIFO_interface)::set(null , "uvm_test_top" , "FIFO_IF" , FIFO_if);
    21              1                          1             run_test("FIFO_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /FIFO_seq_item_pkg
=== Design Unit: work.FIFO_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(FIFO_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(FIFO_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(FIFO_seq_item)
    7               4                    ***0***             `uvm_object_utils(FIFO_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       3001     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(FIFO_seq_item)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(FIFO_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_seq_item_pkg --

  File FIFO_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         3        11    21.42%

================================Statement Details================================

Statement Coverage for instance /FIFO_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
    1                                                package FIFO_seq_item_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class FIFO_seq_item extends uvm_sequence_item;
    7               1                    ***0***             `uvm_object_utils(FIFO_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       3001     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       3001     
    7              10                    ***0***     
    8                                                
    9                                                        // Define signals of sequence items 
    10                                                       rand logic [FIFO_WIDTH-1:0] data_in;
    11                                                       rand logic rst_n, wr_en, rd_en;
    12                                               
    13                                                       logic [FIFO_WIDTH-1:0] data_out;
    14                                                       logic wr_ack, overflow;
    15                                                       logic wr_ack_ref, overflow_ref;
    16                                               
    17                                                       logic [FIFO_WIDTH-1:0] data_out_ref;
    18                                                       logic full, empty, almostfull, almostempty, underflow;
    19                                                       logic full_ref, empty_ref, almostfull_ref, almostempty_ref, underflow_ref;
    20                                               
    21                                                       // constructor
    22                                                       function new(string name = "FIFO_seq_item");
    23              1                       9005                 super.new(name);
    24                                                       endfunction
    25                                               
    26                                                       // print all inputs and outputs
    27                                                       function string convert2string(); 
    28              1                    ***0***                 return $sformatf("%s rst_n= %b , wr_en= %b , rd_en= %b , data_in= %0h , data_out = %0h, wr_ack = %0b, full = %0b, empty = %0b, underflow = %0b, almostempty = %0b, almostfull = %0b, overflow = %0b"
    29                                                           ,super.convert2string(),rst_n,wr_en,rd_en,data_in,data_out,wr_ack,full,empty,underflow,almostempty,almostfull,overflow);
    30                                                       endfunction
    31                                               
    32                                                       // print inputs only 
    33                                                       function string convert2string_stimulus();
    34              1                    ***0***                 return $sformatf("rst_n= %b , wr_en= %b , rd_en= %b , data_in= %0h",rst_n,wr_en,rd_en,data_in);
    35                                                       endfunction
    36                                               
    37                                                       // print reference outputs 
    38                                                       function string convert2string_ref();
    39              1                    ***0***                 return $sformatf("data_out_ref= %0h, wr_ack_ref = %0b, full_ref = %0b, empty_ref = %0b, underflow_ref = %0b, almostempty_ref = %0b, almostfull_ref = %0b, overflow_ref = %0b"


=================================================================================
=== Instance: /FIFO_rst_sequence_pkg
=== Design Unit: work.FIFO_rst_sequence_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_rst_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_rst_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
    8               4                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_rst_sequence_pkg --

  File FIFO_rst_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /FIFO_rst_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_rst_sequence.sv
    1                                                package FIFO_rst_sequence_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import FIFO_seq_item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_rst_sequence extends uvm_sequence #(FIFO_seq_item);
    8               1                    ***0***             `uvm_object_utils(FIFO_rst_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        FIFO_seq_item rst_seq;
    10                                               
    11                                                       // constructor
    12                                                       function new(string name = "FIFO_rst_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body ();
    17              1                          1                 rst_seq = FIFO_seq_item::type_id::create("rst_seq"); // create a sequence item
    18              1                          1                 start_item(rst_seq);
    19              1                          1                 rst_seq.rst_n = 0;
    20              1                          1                 rst_seq.wr_en = 1;
    21              1                          1                 rst_seq.rd_en = 0;
    22              1                          1                 rst_seq.data_in = 5;
    23              1                          1                 finish_item(rst_seq);


=================================================================================
=== Instance: /FIFO_read_write_sequence_pkg
=== Design Unit: work.FIFO_read_write_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_read_write_sequence_pkg/FIFO_read_write_sequence/body/#ublk#25493047#17/immed__26
                     FIFO_read_write_sequence.sv(26)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_write_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_write_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
    8               4                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_read_write_sequence_pkg --

  File FIFO_read_write_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_write_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_write_sequence.sv
    1                                                package FIFO_read_write_sequence_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import FIFO_seq_item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_read_write_sequence extends uvm_sequence #(FIFO_seq_item);
    8               1                    ***0***             `uvm_object_utils(FIFO_read_write_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        FIFO_seq_item read_write_seq;
    10                                               
    11                                                       // constructor
    12                                                       function new(string name = "FIFO_read_write_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body();
    17              1                       1000                 repeat(1000) begin
    18              1                       1000                     read_write_seq = FIFO_seq_item::type_id::create("read_write_seq"); // create a sequence item
    19                                               
    20                                                               /////////////// Edit Constraints /////////////////
    21                                                               //////////////////////////////////////////////////
    22              1                       1000                     read_write_seq.constraint_mode(0);  // disable all constraints 
    23              1                       1000                     read_write_seq.write_and_read.constraint_mode(1);  // enable read_write constraint
    24              1                       1000                     read_write_seq.reset_c.constraint_mode(1);   // enable reset constraint
    25              1                       1000                     start_item(read_write_seq);
    26                                                               assert(read_write_seq.randomize());
    27              1                       1000                     finish_item(read_write_seq);


=================================================================================
=== Instance: /FIFO_write_only_sequence_pkg
=== Design Unit: work.FIFO_write_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_write_only_sequence_pkg/FIFO_write_only_sequence/body/#ublk#39281767#17/immed__26
                     FIFO_write_only_sequence.sv(26)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_only_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
    8               4                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_write_only_sequence_pkg --

  File FIFO_write_only_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_only_sequence.sv
    1                                                package FIFO_write_only_sequence_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import FIFO_seq_item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_write_only_sequence extends uvm_sequence #(FIFO_seq_item);
    8               1                    ***0***             `uvm_object_utils(FIFO_write_only_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        FIFO_seq_item write_only_seq;
    10                                               
    11                                                       // constructor
    12                                                       function new(string name = "FIFO_write_only_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body();
    17              1                       1000                 repeat(1000) begin
    18              1                       1000                     write_only_seq = FIFO_seq_item::type_id::create("write_only_seq"); // create a sequence item
    19                                               
    20                                                               /////////////// Edit Constraints /////////////////
    21                                                               //////////////////////////////////////////////////
    22              1                       1000                     write_only_seq.constraint_mode(0);  // disable all constraints 
    23              1                       1000                     write_only_seq.write_only.constraint_mode(1);  // enable write only constraint
    24              1                       1000                     write_only_seq.reset_c.constraint_mode(1);   // enable reset constraint
    25              1                       1000                     start_item(write_only_seq);
    26                                                               assert(write_only_seq.randomize());
    27              1                       1000                     finish_item(write_only_seq);


=================================================================================
=== Instance: /FIFO_read_only_sequence_pkg
=== Design Unit: work.FIFO_read_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_read_only_sequence_pkg/FIFO_read_only_sequence/body/#ublk#18055399#17/immed__26
                     FIFO_read_only_sequence.sv(26)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_only_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
    8               4                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_read_only_sequence_pkg --

  File FIFO_read_only_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_only_sequence.sv
    1                                                package FIFO_read_only_sequence_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import FIFO_seq_item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_read_only_sequence extends uvm_sequence #(FIFO_seq_item);
    8               1                    ***0***             `uvm_object_utils(FIFO_read_only_sequence)
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        FIFO_seq_item read_only_seq;
    10                                               
    11                                                       // constructor
    12                                                       function new(string name = "FIFO_read_only_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body();
    17              1                       1000                 repeat(1000) begin
    18              1                       1000                     read_only_seq = FIFO_seq_item::type_id::create("read_only_seq"); // create a sequence item
    19                                               
    20                                                               /////////////// Edit Constraints /////////////////
    21                                                               //////////////////////////////////////////////////
    22              1                       1000                     read_only_seq.constraint_mode(0);  // disable all constraints 
    23              1                       1000                     read_only_seq.read_only.constraint_mode(1);  // enable read only constraint
    24              1                       1000                     read_only_seq.reset_c.constraint_mode(1);   // enable reset constraint
    25              1                       1000                     start_item(read_only_seq);
    26                                                               assert(read_only_seq.randomize());
    27              1                       1000                     finish_item(read_only_seq);


=================================================================================
=== Instance: /FIFO_coverage_pkg
=== Design Unit: work.FIFO_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         17        na        na        na
            Covergroup Bins         68        68         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/write_read_cover 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    68         68          -                      
    missing/total bins:                                     0         68          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rst_cvg                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       122          1          -    Covered              
        bin auto[1]                                      2879          1          -    Covered              
    Coverpoint write_enable_cvg                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1505          1          -    Covered              
        bin auto[1]                                      1496          1          -    Covered              
    Coverpoint read_enable_cvg                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1503          1          -    Covered              
        bin auto[1]                                      1498          1          -    Covered              
    Coverpoint full_cvg                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2264          1          -    Covered              
        bin auto[1]                                       737          1          -    Covered              
    Coverpoint empty_cvg                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1772          1          -    Covered              
        bin auto[1]                                      1229          1          -    Covered              
    Coverpoint almost_full_cvg                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2947          1          -    Covered              
        bin auto[1]                                        54          1          -    Covered              
    Coverpoint almost_empty_cvg                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2675          1          -    Covered              
        bin auto[1]                                       326          1          -    Covered              
    Coverpoint write_ack_cvg                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2265          1          -    Covered              
        bin auto[1]                                       736          1          -    Covered              
    Coverpoint overflow_cvg                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2299          1          -    Covered              
        bin auto[1]                                       702          1          -    Covered              
    Coverpoint underflow_cvg                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1961          1          -    Covered              
        bin auto[1]                                      1040          1          -    Covered              
    Cross write_read_full                             100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 253          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 735          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 508          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   2          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 258          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin full_read_en00                       0                     -    ZERO                 
    Cross write_read_empty                            100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   8          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                1113          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  50          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  58          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 245          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 132          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1193          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 202          1          -    Covered              
    Cross write_read_almost_full                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   9          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  40          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   2          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 244          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1242          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1203          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 258          1          -    Covered              
    Cross write_read_almostempty                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 125          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  49          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  92          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  60          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 128          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1196          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1151          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 200          1          -    Covered              
    Cross write_read_wr_ack                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 243          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 493          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  10          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 750          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_ack_wr_en00                       0                     -    ZERO                 
    Cross write_read_overflow                         100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   2          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 700          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 251          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 543          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin write_overflow00                     0                     -    ZERO                 
    Cross write_read_underflow                        100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  42          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 211          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 998          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 247          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1243          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin read_underflow00                     0                     -    ZERO                 
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /FIFO_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_coverage.sv
    1                                                package FIFO_coverage_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(FIFO_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        uvm_analysis_export #(FIFO_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(FIFO_seq_item) cov_fifo;
    11                                                       FIFO_seq_item cov_seq_item;
    12                                               
    13                                                       /////////////// covergroups ///////////////////////
    14                                                       //////////////////////////////////////////////////
    15                                                       covergroup write_read_cover;
    16                                                           rst_cvg:          coverpoint cov_seq_item.rst_n;          //coverpoint for rst_n signal
    17                                                           write_enable_cvg: coverpoint cov_seq_item.wr_en;          //coverpoint for write_en signal
    18                                                           read_enable_cvg : coverpoint cov_seq_item.rd_en;          //coverpoint for read_en signal
    19                                                           full_cvg:         coverpoint cov_seq_item.full;           //coverpoint for full flag output
    20                                                           empty_cvg:        coverpoint cov_seq_item.empty;          //coverpoint for empty flag output
    21                                                           almost_full_cvg:  coverpoint cov_seq_item.almostfull;     //coverpoint for almostfull flag output
    22                                                           almost_empty_cvg: coverpoint cov_seq_item.almostempty;    //coverpoint for almostempty flag output
    23                                                           write_ack_cvg:    coverpoint cov_seq_item.wr_ack;         //coverpoint for write_ack flag output
    24                                                           overflow_cvg:     coverpoint cov_seq_item.overflow;       //coverpoint for overflow flag output
    25                                                           underflow_cvg:    coverpoint cov_seq_item.underflow;      //coverpoint for underflow flag output
    26                                               
    27                                                           write_read_full:        cross write_enable_cvg,read_enable_cvg,full_cvg{                     // cross between wr_en , rd_en , full
    28                                                               //not important for full output if read_en = 1 (as full=1 may only when wr_en=1)
    29                                                               ignore_bins full_read_en00 = binsof(read_enable_cvg) intersect {1} && binsof(full_cvg) intersect {1};
    30                                                           }
    31                                               
    32                                                           write_read_empty:       cross write_enable_cvg,read_enable_cvg,empty_cvg;               // cross between wr_en , rd_en , empty
    33                                                           write_read_almost_full: cross write_enable_cvg,read_enable_cvg,almost_full_cvg;         // cross between wr_en , rd_en , almostfull
    34                                                           write_read_almostempty: cross write_enable_cvg,read_enable_cvg,almost_empty_cvg;        // cross between wr_en , rd_en , almostempty
    35                                               
    36                                                           write_read_wr_ack:      cross write_enable_cvg,read_enable_cvg,write_ack_cvg{            // cross between wr_en , rd_en , wr_ack
    37                                                               //not important for wr_ack output if write_en = 0 (as wr_ack=1 only when wr_en=1)
    38                                                               ignore_bins wr_ack_wr_en00 = binsof(write_enable_cvg) intersect {0} && binsof(write_ack_cvg) intersect {1};  
    39                                                           }
    40                                               
    41                                                           write_read_overflow:    cross write_enable_cvg,read_enable_cvg,overflow_cvg{             // cross between wr_en , rd_en , overflow
    42                                                               //not important for overflow output if write_en = 0 (as overflow occurs only when wr_en=1)
    43                                                               ignore_bins write_overflow00 = binsof(write_enable_cvg) intersect {0} && binsof(overflow_cvg) intersect {1};  
    44                                                           }
    45                                               
    46                                                           write_read_underflow:   cross write_enable_cvg,read_enable_cvg,underflow_cvg{            // cross between wr_en , rd_en , underflow
    47                                                               //not important for underflow output if read_en = 0 (as underflow occurs only when rd_en=1)
    48                                                               ignore_bins read_underflow00 = binsof(read_enable_cvg) intersect {0} && binsof(underflow_cvg) intersect {1};  
    49                                                           }
    50                                                       endgroup
    51                                               
    52                                                       // constructor
    53                                                       function new(string name = "FIFO_coverage" , uvm_component parent = null);
    54              1                          1                 super.new(name,parent);
    55              1                          1                 write_read_cover = new();
    56                                                       endfunction
    57                                               
    58                                                       // build_phase
    59                                                       function void build_phase(uvm_phase phase);
    60              1                          1                 super.build_phase(phase);
    61              1                          1                 cov_export = new("cov_export",this);
    62              1                          1                 cov_fifo = new("cov_fifo",this);
    63                                                       endfunction
    64                                               
    65                                                       // connect_phase
    66                                                       function void connect_phase(uvm_phase phase);
    67              1                          1                 super.connect_phase(phase);
    68              1                          1                 cov_export.connect(cov_fifo.analysis_export);
    69                                                       endfunction
    70                                               
    71                                                       // run_phase
    72                                                       task run_phase(uvm_phase phase);
    73              1                          1                 super.run_phase(phase);
    74              1                          1                 forever begin
    75              1                       3002                     cov_fifo.get(cov_seq_item);
    76              1                       3001                     write_read_cover.sample();


=================================================================================
=== Instance: /FIFO_scoreboard_pkg
=== Design Unit: work.FIFO_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /FIFO_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
------------------------------------IF Branch------------------------------------
    41                                      3001     Count coming in to IF
    41              1                    ***0***                 if (sb_seq_item.data_out != sb_seq_item.data_out_ref 
    54              1                       3001                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              1                    ***0***                     `uvm_error("run_phase" , $sformatf("comparison failed , transaction recieved by the DUT: %0s\n , while the correct outputs: %0s "
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1             `uvm_info("report_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1             `uvm_info("report_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         0         8     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_scoreboard_pkg --

  File FIFO_scoreboard.sv
----------------Focused Condition View-------------------
Line       41 Item    1  ((this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) || (this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) || (this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) || (this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) || (this.sb_seq_item.full != this.sb_seq_item.full_ref) || (this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || (this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref))
Condition totals: 0 of 8 input terms covered = 0.00%

                                                          Input Term   Covered  Reason for no coverage   Hint
                                                         -----------  --------  -----------------------  --------------
        (this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref)         N  '_1' not hit             Hit '_1'
            (this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref)         N  '_1' not hit             Hit '_1'
        (this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref)         N  '_1' not hit             Hit '_1'
      (this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref)         N  '_1' not hit             Hit '_1'
                (this.sb_seq_item.full != this.sb_seq_item.full_ref)         N  '_1' not hit             Hit '_1'
              (this.sb_seq_item.empty != this.sb_seq_item.empty_ref)         N  '_1' not hit             Hit '_1'
    (this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref)         N  '_1' not hit             Hit '_1'
  (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                            Non-masking condition(s)      
 ---------  ---------  --------------------                                                  -------------------------     
  Row   1:          1  (this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref)_0        ~((this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) || ((this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) || ((this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) || ((this.sb_seq_item.full != this.sb_seq_item.full_ref) || ((this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || ((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)))))))
  Row   2:    ***0***  (this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref)_1        -                             
  Row   3:          1  (this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref)_0            (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~((this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) || ((this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) || ((this.sb_seq_item.full != this.sb_seq_item.full_ref) || ((this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || ((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)))))))
  Row   4:    ***0***  (this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref)_1            ~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref)
  Row   5:          1  (this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref)_0        (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~((this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) || ((this.sb_seq_item.full != this.sb_seq_item.full_ref) || ((this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || ((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref))))))
  Row   6:    ***0***  (this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref)_1        (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref))
  Row   7:          1  (this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref)_0      (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~((this.sb_seq_item.full != this.sb_seq_item.full_ref) || ((this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || ((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)))))
  Row   8:    ***0***  (this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref)_1      (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref))
  Row   9:          1  (this.sb_seq_item.full != this.sb_seq_item.full_ref)_0                (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~((this.sb_seq_item.empty != this.sb_seq_item.empty_ref) || ((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref))))
 Row   10:    ***0***  (this.sb_seq_item.full != this.sb_seq_item.full_ref)_1                (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref))
 Row   11:          1  (this.sb_seq_item.empty != this.sb_seq_item.empty_ref)_0              (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref) && ~((this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref) || (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)))
 Row   12:    ***0***  (this.sb_seq_item.empty != this.sb_seq_item.empty_ref)_1              (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref))
 Row   13:          1  (this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref)_0    (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref) && ~(this.sb_seq_item.empty != this.sb_seq_item.empty_ref) && ~(this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref))
 Row   14:    ***0***  (this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref)_1    (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref) && ~(this.sb_seq_item.empty != this.sb_seq_item.empty_ref))
 Row   15:          1  (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)_0  (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref) && ~(this.sb_seq_item.empty != this.sb_seq_item.empty_ref) && ~(this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref))
 Row   16:    ***0***  (this.sb_seq_item.almostempty != this.sb_seq_item.almostempty_ref)_1  (~(this.sb_seq_item.data_out != this.sb_seq_item.data_out_ref) && ~(this.sb_seq_item.wr_ack != this.sb_seq_item.wr_ack_ref) && ~(this.sb_seq_item.overflow != this.sb_seq_item.overflow_ref) && ~(this.sb_seq_item.underflow != this.sb_seq_item.underflow_ref) && ~(this.sb_seq_item.full != this.sb_seq_item.full_ref) && ~(this.sb_seq_item.empty != this.sb_seq_item.empty_ref) && ~(this.sb_seq_item.almostfull != this.sb_seq_item.almostfull_ref))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        16         4    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
    1                                                package FIFO_scoreboard_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_scoreboard extends uvm_scoreboard;
    8               1                    ***0***         `uvm_component_utils(FIFO_scoreboard)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                   uvm_analysis_export #(FIFO_seq_item) sb_export;
    11                                                   uvm_tlm_analysis_fifo #(FIFO_seq_item) sb_fifo;
    12                                                   FIFO_seq_item sb_seq_item;
    13              1                          1         int correct_count = 0;
    14              1                          1         int error_count = 0;
    15                                                   
    16                                                   // constructor
    17                                                   function new(string name = "FIFO_scoreboard" , uvm_component parent = null);
    18              1                          1             super.new(name,parent);
    19                                                   endfunction
    20                                                       
    21                                                   //build_phase
    22                                                   function void build_phase(uvm_phase phase);
    23              1                          1             super.build_phase(phase);
    24              1                          1             sb_export = new("sb_export",this);
    25              1                          1             sb_fifo = new("sb_fifo",this);
    26                                                   endfunction
    27                                               
    28                                                   //connect_phase
    29                                                   function void connect_phase(uvm_phase phase);
    30              1                          1             super.connect_phase(phase);
    31              1                          1             sb_export.connect(sb_fifo.analysis_export);
    32                                                   endfunction
    33                                               
    34                                                   //run_phase
    35                                                   task run_phase(uvm_phase phase);
    36              1                          1             super.run_phase(phase);
    37              1                          1             forever begin
    38              1                       3002                 sb_fifo.get(sb_seq_item);
    39                                               
    40                                                           //checking
    41                                                           if (sb_seq_item.data_out != sb_seq_item.data_out_ref 
    42                                                           || sb_seq_item.wr_ack != sb_seq_item.wr_ack_ref 
    43                                                           || sb_seq_item.overflow != sb_seq_item.overflow_ref
    44                                                           || sb_seq_item.underflow != sb_seq_item.underflow_ref
    45                                                           || sb_seq_item.full != sb_seq_item.full_ref
    46                                                           || sb_seq_item.empty != sb_seq_item.empty_ref
    47                                                           || sb_seq_item.almostfull != sb_seq_item.almostfull_ref
    48                                                           || sb_seq_item.almostempty != sb_seq_item.almostempty_ref) begin
    49                                               
    50              1                    ***0***                     `uvm_error("run_phase" , $sformatf("comparison failed , transaction recieved by the DUT: %0s\n , while the correct outputs: %0s "
    51                                                               ,sb_seq_item.convert2string() , sb_seq_item.convert2string_ref()));
    52              1                    ***0***                     error_count++;
    53                                                           end
    54                                                           else begin
    55              1                       3001                     correct_count++;
    56                                                           end
    57                                                       end
    58                                                   endtask
    59                                               
    60                                                   // report_phase
    61                                                   function void report_phase(uvm_phase phase);
    62              1                          1             super.report_phase(phase);
    63              1                          1             `uvm_info("report_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM)
    64              1                          1             `uvm_info("report_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /FIFO_sequencer_pkg
=== Design Unit: work.FIFO_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequencer.sv
    1                                                package FIFO_sequencer_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    
    7                                                    class FIFO_sequencer extends uvm_sequencer #(FIFO_seq_item);
    8               1                    ***0***             `uvm_component_utils(FIFO_sequencer)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       // constructor
    11                                                       function new(string name = "FIFO_sequencer" , uvm_component parent = null);
    12              1                          1                 super.new(name,parent);


=================================================================================
=== Instance: /FIFO_driver_pkg
=== Design Unit: work.FIFO_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
------------------------------------IF Branch------------------------------------
    33                                      3001     Count coming in to IF
    33              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
    1                                                package FIFO_driver_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_driver extends uvm_driver #(FIFO_seq_item);
    8               1                    ***0***             `uvm_component_utils(FIFO_driver)
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual FIFO_interface FIFO_vif;
    10                                                       FIFO_seq_item stim_seq_item;
    11                                               
    12                                                       // constructor
    13                                                       function new(string name = "FIFO_driver" , uvm_component parent = null);
    14              1                          1                 super.new(name,parent);
    15                                                       endfunction
    16                                               
    17                                                       // run_phase
    18                                                       task run_phase (uvm_phase phase);
    19              1                          1                 super.run_phase(phase);
    20                                               
    21                                                           // generate stimulus
    22              1                          1                 forever begin
    23              1                       3002                     stim_seq_item = FIFO_seq_item::type_id::create("stim_seq_item");
    24              1                       3002                     seq_item_port.get_next_item(stim_seq_item);
    25                                               
    26                                                               // generate inputs 
    27              1                       3001                     FIFO_vif.rst_n = stim_seq_item.rst_n;
    28              1                       3001                     FIFO_vif.wr_en = stim_seq_item.wr_en;
    29              1                       3001                     FIFO_vif.rd_en = stim_seq_item.rd_en;
    30              1                       3001                     FIFO_vif.data_in = stim_seq_item.data_in;
    31              1                       3001                     @(negedge FIFO_vif.clk);
    32              1                       3001                     seq_item_port.item_done();
    33              1                    ***0***                     `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /FIFO_monitor_pkg
=== Design Unit: work.FIFO_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_monitor.sv
------------------------------------IF Branch------------------------------------
    59                                      3001     Count coming in to IF
    59              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string(), UVM_HIGH)
                                            3001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      32        29         3    90.62%

================================Statement Details================================

Statement Coverage for instance /FIFO_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_monitor.sv
    1                                                package FIFO_monitor_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                
    7                                                    class FIFO_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(FIFO_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual FIFO_interface FIFO_vif;
    10                                                       FIFO_seq_item mon_seq_item;
    11                                                       uvm_analysis_port #(FIFO_seq_item) mon_ap;
    12                                               
    13                                                       // constructor
    14                                                       function new(string name = "FIFO_monitor" , uvm_component parent = null);
    15              1                          1                 super.new(name,parent);
    16                                                       endfunction
    17                                               
    18                                                       // build_phase
    19                                                       function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21              1                          1                 mon_ap = new("mon_ap",this);
    22                                                       endfunction
    23                                               
    24                                                       // run_phase
    25                                                       task run_phase (uvm_phase phase);
    26              1                          1                 super.run_phase(phase);
    27              1                          1                 forever begin
    28              1                       3002                     mon_seq_item = FIFO_seq_item::type_id::create("mon_seq_item");
    29              1                       3002                     @(negedge FIFO_vif.clk);
    30                                                       
    31                                                               // inputs monitoring
    32              1                       3001                     mon_seq_item.rst_n = FIFO_vif.rst_n;
    33              1                       3001                     mon_seq_item.wr_en = FIFO_vif.wr_en;
    34              1                       3001                     mon_seq_item.rd_en = FIFO_vif.rd_en;
    35              1                       3001                     mon_seq_item.data_in = FIFO_vif.data_in;
    36                                                               
    37                                               
    38                                                               // outputs monitoring
    39              1                       3001                     mon_seq_item.data_out = FIFO_vif.data_out;
    40              1                       3001                     mon_seq_item.wr_ack = FIFO_vif.wr_ack;
    41              1                       3001                     mon_seq_item.overflow = FIFO_vif.overflow;
    42              1                       3001                     mon_seq_item.underflow = FIFO_vif.underflow;
    43              1                       3001                     mon_seq_item.full = FIFO_vif.full;
    44              1                       3001                     mon_seq_item.empty = FIFO_vif.empty;
    45              1                       3001                     mon_seq_item.almostfull = FIFO_vif.almostfull;
    46              1                       3001                     mon_seq_item.almostempty = FIFO_vif.almostempty;
    47                                               
    48                                                               // reference outputs monitoring
    49              1                       3001                     mon_seq_item.data_out_ref = FIFO_vif.data_out_ref;
    50              1                       3001                     mon_seq_item.wr_ack_ref = FIFO_vif.wr_ack_ref;
    51              1                       3001                     mon_seq_item.overflow_ref = FIFO_vif.overflow_ref;
    52              1                       3001                     mon_seq_item.underflow_ref = FIFO_vif.underflow_ref;
    53              1                       3001                     mon_seq_item.full_ref = FIFO_vif.full_ref;
    54              1                       3001                     mon_seq_item.empty_ref = FIFO_vif.empty_ref;
    55              1                       3001                     mon_seq_item.almostfull_ref = FIFO_vif.almostfull_ref;
    56              1                       3001                     mon_seq_item.almostempty_ref = FIFO_vif.almostempty_ref;
    57              1                       3001                     mon_ap.write(mon_seq_item);
    58                                               
    59              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /FIFO_config_pkg
=== Design Unit: work.FIFO_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(FIFO_config)
    7               4                    ***0***             `uvm_object_utils(FIFO_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_config_pkg --

  File FIFO_config.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /FIFO_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
    1                                                package FIFO_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class FIFO_config extends uvm_object;
    7               1                    ***0***             `uvm_object_utils(FIFO_config)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                        virtual FIFO_interface FIFO_vif; 
    9                                                        
    10                                                       // constructor
    11                                                       function new(string name = "FIFO_config");
    12              1                          1                 super.new(name);


=================================================================================
=== Instance: /FIFO_agent_pkg
=== Design Unit: work.FIFO_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                    ***0***                 if (!uvm_config_db #(FIFO_config)::get(this , "" , "CFG" , FIFO_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /FIFO_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
    1                                                package FIFO_agent_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_seq_item_pkg::*;
    5                                                    import FIFO_config_pkg::*;
    6                                                    import FIFO_monitor_pkg::*;
    7                                                    import FIFO_driver_pkg::*;
    8                                                    import FIFO_sequencer_pkg::*;
    9                                                    `include "uvm_macros.svh"
    10                                               
    11                                                   class FIFO_agent extends uvm_agent;
    12              1                    ***0***             `uvm_component_utils(FIFO_agent)
    12              2                    ***0***     
    12              3                          2     
    13                                                       FIFO_monitor mon;
    14                                                       FIFO_sequencer sqr;
    15                                                       FIFO_driver drv;
    16                                                       FIFO_config FIFO_cfg;
    17                                                       uvm_analysis_port #(FIFO_seq_item) agt_ap;
    18                                               
    19                                                       // constructor
    20                                                       function new(string name = "FIFO_agent" , uvm_component parent = null);
    21              1                          1                 super.new(name,parent);
    22                                                       endfunction
    23                                               
    24                                                       // build_phase
    25                                                       function void build_phase(uvm_phase phase);
    26              1                          1                 super.build_phase(phase);
    27                                                           if (!uvm_config_db #(FIFO_config)::get(this , "" , "CFG" , FIFO_cfg)) begin
    28              1                    ***0***                     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
    29                                                           end
    30              1                          1                 agt_ap = new("agt_ap",this);
    31              1                          1                 sqr = FIFO_sequencer::type_id::create("sqr",this);
    32              1                          1                 mon = FIFO_monitor::type_id::create("mon",this);
    33              1                          1                 drv = FIFO_driver::type_id::create("drv",this);
    34                                                       endfunction
    35                                               
    36                                                       // connect_phase
    37                                                       function void connect_phase(uvm_phase phase);
    38              1                          1                 drv.FIFO_vif = FIFO_cfg.FIFO_vif;
    39              1                          1                 mon.FIFO_vif = FIFO_cfg.FIFO_vif;
    40              1                          1                 drv.seq_item_port.connect(sqr.seq_item_export);
    41              1                          1                 mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /FIFO_env_pkg
=== Design Unit: work.FIFO_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /FIFO_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_env.sv
    1                                                package FIFO_env_pkg;
    2                                                    import shared_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_agent_pkg::*;
    5                                                    import FIFO_scoreboard_pkg::*;
    6                                                    import FIFO_coverage_pkg::*;
    7                                                    `include "uvm_macros.svh"
    8                                                    class FIFO_env extends uvm_env;
    9               1                    ***0***             `uvm_component_utils(FIFO_env)
    9               2                    ***0***     
    9               3                          2     
    10                                                       FIFO_agent agt;
    11                                                       FIFO_scoreboard sb;
    12                                                       FIFO_coverage cov;
    13                                               
    14                                                       // constructor
    15                                                       function new(string name = "FIFO_env" , uvm_component parent = null);
    16              1                          1                 super.new(name,parent);
    17                                                       endfunction
    18                                               
    19                                                       //build_phase
    20                                                       function void build_phase(uvm_phase phase);
    21              1                          1                 super.build_phase(phase);
    22              1                          1                 agt = FIFO_agent::type_id::create("agt",this);
    23              1                          1                 sb = FIFO_scoreboard::type_id::create("sb",this);
    24              1                          1                 cov = FIFO_coverage::type_id::create("cov",this);
    25                                                       endfunction
    26                                               
    27                                                       //connect_phase
    28                                                       function void connect_phase(uvm_phase phase);
    29              1                          1                 super.connect_phase(phase);
    30              1                          1                 agt.agt_ap.connect(sb.sb_export);
    31              1                          1                 agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /FIFO_test_pkg
=== Design Unit: work.FIFO_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         9        11    45.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
------------------------------------IF Branch------------------------------------
    37                                         1     Count coming in to IF
    37              1                    ***0***                 if (!uvm_config_db #(virtual FIFO_interface)::get(this , "" , "FIFO_IF" , FIFO_cfg.FIFO_vif)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***                     `uvm_fatal("build_phase" , "Test - unable to get the virtual interface of FIFO from uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1                 `uvm_info("run_phase", "reset_asserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1                 `uvm_info("run_phase" , "reset_deasserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
    54              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    66                                         1     Count coming in to IF
    66              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        25         3    89.28%

================================Statement Details================================

Statement Coverage for instance /FIFO_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
    1                                                package FIFO_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import shared_pkg::*;
    4                                                    import FIFO_env_pkg::*;
    5                                                    import FIFO_read_only_sequence_pkg::*;
    6                                                    import FIFO_write_only_sequence_pkg::*;
    7                                                    import FIFO_read_write_sequence_pkg::*;
    8                                                    import FIFO_rst_sequence_pkg::*;
    9                                                    import FIFO_config_pkg::*;
    10                                                   `include "uvm_macros.svh"
    11                                               
    12                                                   class FIFO_test extends uvm_test;
    13              1                    ***0***             `uvm_component_utils(FIFO_test)
    13              2                    ***0***     
    13              3                          4     
    14                                                       FIFO_env env;
    15                                                       virtual FIFO_interface FIFO_vif;
    16                                                       FIFO_config FIFO_cfg;
    17                                                       FIFO_rst_sequence rst_seq;
    18                                                       FIFO_read_only_sequence rd_seq;
    19                                                       FIFO_write_only_sequence wr_seq;
    20                                                       FIFO_read_write_sequence rd_wr_seq;
    21                                               
    22                                                       //constructor
    23                                                       function new(string name = "FIFO_test" ,uvm_component parent = null);
    24              1                          1                 super.new(name,parent);
    25                                                       endfunction 
    26                                               
    27                                                       //build phase
    28                                                       function void build_phase(uvm_phase phase);
    29              1                          1                 super.build_phase(phase);
    30              1                          1                 env = FIFO_env::type_id::create("env",this);
    31              1                          1                 FIFO_cfg = FIFO_config::type_id::create("FIFO_cfg",this);
    32              1                          1                 rst_seq = FIFO_rst_sequence::type_id::create("rst_seq",this);
    33              1                          1                 rd_seq = FIFO_read_only_sequence::type_id::create("rd_seq",this);
    34              1                          1                 wr_seq = FIFO_write_only_sequence::type_id::create("wr_seq",this);
    35              1                          1                 rd_wr_seq = FIFO_read_write_sequence::type_id::create("rd_wr_seq",this);
    36                                               
    37                                                           if (!uvm_config_db #(virtual FIFO_interface)::get(this , "" , "FIFO_IF" , FIFO_cfg.FIFO_vif)) begin
    38              1                    ***0***                     `uvm_fatal("build_phase" , "Test - unable to get the virtual interface of FIFO from uvm_config_db");
    39                                                           end
    40              1                          1                 uvm_config_db #(FIFO_config)::set(this , "*" , "CFG" , FIFO_cfg);
    41                                                       endfunction
    42                                               
    43                                                       //run phase
    44                                                       task run_phase (uvm_phase phase);
    45              1                          1                 super.run_phase(phase);
    46              1                          1                 phase.raise_objection(this);
    47                                               
    48                                                           //reset seq
    49              1                          1                 `uvm_info("run_phase", "reset_asserted" , UVM_LOW)
    50              1                          1                 rst_seq.start(env.agt.sqr);
    51              1                          1                 `uvm_info("run_phase" , "reset_deasserted" , UVM_LOW)
    52                                               
    53                                                           //write_only sequence
    54              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
    55              1                          1                 wr_seq.start(env.agt.sqr);
    56              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
    57                                               
    58                                                           //read_only sequence
    59              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
    60              1                          1                 rd_seq.start(env.agt.sqr);
    61              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
    62                                               
    63                                                           // write_read sequence
    64              1                          1                 `uvm_info("run_phase", "stimulus generation started" , UVM_LOW)
    65              1                          1                 rd_wr_seq.start(env.agt.sqr);
    66              1                          1                 `uvm_info("run_phase", "stimulus generation ended" , UVM_LOW)
    67                                               
    68              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/write_read_cover 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    68         68          -                      
    missing/total bins:                                     0         68          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rst_cvg                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       122          1          -    Covered              
        bin auto[1]                                      2879          1          -    Covered              
    Coverpoint write_enable_cvg                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1505          1          -    Covered              
        bin auto[1]                                      1496          1          -    Covered              
    Coverpoint read_enable_cvg                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1503          1          -    Covered              
        bin auto[1]                                      1498          1          -    Covered              
    Coverpoint full_cvg                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2264          1          -    Covered              
        bin auto[1]                                       737          1          -    Covered              
    Coverpoint empty_cvg                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1772          1          -    Covered              
        bin auto[1]                                      1229          1          -    Covered              
    Coverpoint almost_full_cvg                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2947          1          -    Covered              
        bin auto[1]                                        54          1          -    Covered              
    Coverpoint almost_empty_cvg                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2675          1          -    Covered              
        bin auto[1]                                       326          1          -    Covered              
    Coverpoint write_ack_cvg                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2265          1          -    Covered              
        bin auto[1]                                       736          1          -    Covered              
    Coverpoint overflow_cvg                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      2299          1          -    Covered              
        bin auto[1]                                       702          1          -    Covered              
    Coverpoint underflow_cvg                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1961          1          -    Covered              
        bin auto[1]                                      1040          1          -    Covered              
    Cross write_read_full                             100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 253          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 735          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 508          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   2          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 258          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin full_read_en00                       0                     -    ZERO                 
    Cross write_read_empty                            100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   8          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                1113          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  50          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  58          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 245          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 132          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1193          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 202          1          -    Covered              
    Cross write_read_almost_full                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   9          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  40          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   2          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 244          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1242          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1203          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 258          1          -    Covered              
    Cross write_read_almostempty                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 125          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  49          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  92          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  60          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 128          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1196          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1151          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 200          1          -    Covered              
    Cross write_read_wr_ack                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 243          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 493          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  10          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 750          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_ack_wr_en00                       0                     -    ZERO                 
    Cross write_read_overflow                         100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   2          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 700          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 251          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                1245          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 543          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin write_overflow00                     0                     -    ZERO                 
    Cross write_read_underflow                        100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  42          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 211          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 998          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 247          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                1243          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin read_underflow00                     0                     -    ZERO                 

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(120)   5 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_after_almostfull_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(121)  33 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_from_full_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(122)   5 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(123)   9 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(124) 129 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_from_almostempty_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(125)  62 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(126) 101 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_from_empty_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(127)  89 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/overflow_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(128) 674 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/underflow_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(129) 991 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(130) 705 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_inactive_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(131)2054 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(132) 705 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/rd_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(133) 388 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_inc_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(134) 471 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_dec_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(135) 192 Covered   
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_const_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(136) 194 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 17

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/reset_ass
                     FIFO_SVA.sv(10)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_ass
                     FIFO_SVA.sv(13)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_ass
                     FIFO_SVA.sv(14)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_ass
                     FIFO_SVA.sv(15)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almost_empty_ass
                     FIFO_SVA.sv(16)                    0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_inactive_assert
                     FIFO_SVA.sv(101)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/full_after_almostfull_assert
                     FIFO_SVA.sv(102)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_from_full_assert
                     FIFO_SVA.sv(103)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almostfull_inactive_assert
                     FIFO_SVA.sv(104)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_inactive_assert
                     FIFO_SVA.sv(105)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/empty_from_almostempty_assert
                     FIFO_SVA.sv(106)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_inactive_assert
                     FIFO_SVA.sv(107)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/almsotempty_from_empty_assert
                     FIFO_SVA.sv(108)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/overflow_assert
                     FIFO_SVA.sv(109)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/underflow_assert
                     FIFO_SVA.sv(110)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_assert
                     FIFO_SVA.sv(111)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ack_inactive_assert
                     FIFO_SVA.sv(112)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/wr_ptr_assert
                     FIFO_SVA.sv(113)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/rd_ptr_assert
                     FIFO_SVA.sv(114)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_inc_assert
                     FIFO_SVA.sv(115)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_dec_assert
                     FIFO_SVA.sv(116)                   0          1
/FIFO_top/FIFO_DUT/FIFO_SVA_INST/count_const_assert
                     FIFO_SVA.sv(117)                   0          1
/FIFO_read_write_sequence_pkg/FIFO_read_write_sequence/body/#ublk#25493047#17/immed__26
                     FIFO_read_write_sequence.sv(26)
                                                        0          1
/FIFO_write_only_sequence_pkg/FIFO_write_only_sequence/body/#ublk#39281767#17/immed__26
                     FIFO_write_only_sequence.sv(26)
                                                        0          1
/FIFO_read_only_sequence_pkg/FIFO_read_only_sequence/body/#ublk#18055399#17/immed__26
                     FIFO_read_only_sequence.sv(26)
                                                        0          1

Total Coverage By Instance (filtered view): 82.97%

